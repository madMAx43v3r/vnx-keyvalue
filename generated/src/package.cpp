
// AUTO GENERATED by vnxcppcodegen

#include <vnx/keyvalue/CacheBase.hxx>
#include <vnx/keyvalue/CloseEntry.hxx>
#include <vnx/keyvalue/ClusterBase.hxx>
#include <vnx/keyvalue/Collection.hxx>
#include <vnx/keyvalue/Entry.hxx>
#include <vnx/keyvalue/IndexEntry.hxx>
#include <vnx/keyvalue/ServerBase.hxx>
#include <vnx/keyvalue/ServerInfo.hxx>
#include <vnx/keyvalue/Storage_cancel_sync_job.hxx>
#include <vnx/keyvalue/Storage_cancel_sync_job_return.hxx>
#include <vnx/keyvalue/Storage_delete_value.hxx>
#include <vnx/keyvalue/Storage_delete_value_return.hxx>
#include <vnx/keyvalue/Storage_get_key.hxx>
#include <vnx/keyvalue/Storage_get_key_return.hxx>
#include <vnx/keyvalue/Storage_get_keys.hxx>
#include <vnx/keyvalue/Storage_get_keys_return.hxx>
#include <vnx/keyvalue/Storage_get_value.hxx>
#include <vnx/keyvalue/Storage_get_value_return.hxx>
#include <vnx/keyvalue/Storage_get_value_locked.hxx>
#include <vnx/keyvalue/Storage_get_value_locked_return.hxx>
#include <vnx/keyvalue/Storage_get_values.hxx>
#include <vnx/keyvalue/Storage_get_values_return.hxx>
#include <vnx/keyvalue/Storage_store_value.hxx>
#include <vnx/keyvalue/Storage_store_value_return.hxx>
#include <vnx/keyvalue/Storage_store_value_delay.hxx>
#include <vnx/keyvalue/Storage_store_value_delay_return.hxx>
#include <vnx/keyvalue/Storage_store_values.hxx>
#include <vnx/keyvalue/Storage_store_values_return.hxx>
#include <vnx/keyvalue/Storage_store_values_delay.hxx>
#include <vnx/keyvalue/Storage_store_values_delay_return.hxx>
#include <vnx/keyvalue/Storage_sync_all.hxx>
#include <vnx/keyvalue/Storage_sync_all_return.hxx>
#include <vnx/keyvalue/Storage_sync_all_keys.hxx>
#include <vnx/keyvalue/Storage_sync_all_keys_return.hxx>
#include <vnx/keyvalue/Storage_sync_all_keys_private.hxx>
#include <vnx/keyvalue/Storage_sync_all_keys_private_return.hxx>
#include <vnx/keyvalue/Storage_sync_all_private.hxx>
#include <vnx/keyvalue/Storage_sync_all_private_return.hxx>
#include <vnx/keyvalue/Storage_sync_from.hxx>
#include <vnx/keyvalue/Storage_sync_from_return.hxx>
#include <vnx/keyvalue/Storage_sync_range.hxx>
#include <vnx/keyvalue/Storage_sync_range_return.hxx>
#include <vnx/keyvalue/Storage_unlock.hxx>
#include <vnx/keyvalue/Storage_unlock_return.hxx>
#include <vnx/keyvalue/SyncInfo.hxx>
#include <vnx/keyvalue/SyncModuleBase.hxx>
#include <vnx/keyvalue/SyncUpdate.hxx>
#include <vnx/keyvalue/TypeEntry.hxx>
#include <vnx/keyvalue/shard_t.hxx>

#include <vnx/keyvalue/package.hxx>
#include <vnx/vnx.h>



namespace vnx {

void type<::vnx::keyvalue::CloseEntry>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::CloseEntry());
}

void type<::vnx::keyvalue::Collection>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Collection());
}

void type<::vnx::keyvalue::Entry>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Entry());
}

void type<::vnx::keyvalue::IndexEntry>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::IndexEntry());
}

void type<::vnx::keyvalue::ServerInfo>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::ServerInfo());
}

void type<::vnx::keyvalue::Storage_cancel_sync_job>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_cancel_sync_job());
}

void type<::vnx::keyvalue::Storage_cancel_sync_job_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_cancel_sync_job_return());
}

void type<::vnx::keyvalue::Storage_delete_value>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_delete_value());
}

void type<::vnx::keyvalue::Storage_delete_value_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_delete_value_return());
}

void type<::vnx::keyvalue::Storage_get_key>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_key());
}

void type<::vnx::keyvalue::Storage_get_key_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_key_return());
}

void type<::vnx::keyvalue::Storage_get_keys>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_keys());
}

void type<::vnx::keyvalue::Storage_get_keys_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_keys_return());
}

void type<::vnx::keyvalue::Storage_get_value>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_value());
}

void type<::vnx::keyvalue::Storage_get_value_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_value_return());
}

void type<::vnx::keyvalue::Storage_get_value_locked>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_value_locked());
}

void type<::vnx::keyvalue::Storage_get_value_locked_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_value_locked_return());
}

void type<::vnx::keyvalue::Storage_get_values>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_values());
}

void type<::vnx::keyvalue::Storage_get_values_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_get_values_return());
}

void type<::vnx::keyvalue::Storage_store_value>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_store_value());
}

void type<::vnx::keyvalue::Storage_store_value_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_store_value_return());
}

void type<::vnx::keyvalue::Storage_store_value_delay>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_store_value_delay());
}

void type<::vnx::keyvalue::Storage_store_value_delay_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_store_value_delay_return());
}

void type<::vnx::keyvalue::Storage_store_values>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_store_values());
}

void type<::vnx::keyvalue::Storage_store_values_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_store_values_return());
}

void type<::vnx::keyvalue::Storage_store_values_delay>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_store_values_delay());
}

void type<::vnx::keyvalue::Storage_store_values_delay_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_store_values_delay_return());
}

void type<::vnx::keyvalue::Storage_sync_all>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_all());
}

void type<::vnx::keyvalue::Storage_sync_all_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_all_return());
}

void type<::vnx::keyvalue::Storage_sync_all_keys>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_all_keys());
}

void type<::vnx::keyvalue::Storage_sync_all_keys_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_all_keys_return());
}

void type<::vnx::keyvalue::Storage_sync_all_keys_private>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_all_keys_private());
}

void type<::vnx::keyvalue::Storage_sync_all_keys_private_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_all_keys_private_return());
}

void type<::vnx::keyvalue::Storage_sync_all_private>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_all_private());
}

void type<::vnx::keyvalue::Storage_sync_all_private_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_all_private_return());
}

void type<::vnx::keyvalue::Storage_sync_from>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_from());
}

void type<::vnx::keyvalue::Storage_sync_from_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_from_return());
}

void type<::vnx::keyvalue::Storage_sync_range>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_range());
}

void type<::vnx::keyvalue::Storage_sync_range_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_sync_range_return());
}

void type<::vnx::keyvalue::Storage_unlock>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_unlock());
}

void type<::vnx::keyvalue::Storage_unlock_return>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::Storage_unlock_return());
}

void type<::vnx::keyvalue::SyncInfo>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::SyncInfo());
}

void type<::vnx::keyvalue::SyncUpdate>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::SyncUpdate());
}

void type<::vnx::keyvalue::TypeEntry>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::TypeEntry());
}

void type<::vnx::keyvalue::shard_t>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::vnx::keyvalue::shard_t());
}


} // namespace vnx


namespace vnx {
namespace keyvalue {


static void register_all_types() {
	vnx::register_type_code(::vnx::keyvalue::CacheBase::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::CloseEntry::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::ClusterBase::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Collection::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Entry::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::IndexEntry::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::ServerBase::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::ServerInfo::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_cancel_sync_job::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_cancel_sync_job_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_delete_value::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_delete_value_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_key::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_key_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_keys::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_keys_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_value::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_value_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_value_locked::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_value_locked_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_values::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_get_values_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_store_value::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_store_value_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_store_value_delay::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_store_value_delay_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_store_values::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_store_values_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_store_values_delay::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_store_values_delay_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_all::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_all_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_all_keys::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_all_keys_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_all_keys_private::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_all_keys_private_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_all_private::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_all_private_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_from::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_from_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_range::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_sync_range_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_unlock::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::Storage_unlock_return::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::SyncInfo::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::SyncModuleBase::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::SyncUpdate::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::TypeEntry::static_create_type_code());
	vnx::register_type_code(::vnx::keyvalue::shard_t::static_create_type_code());
}

static struct vnx_static_init {
	vnx_static_init() {
		register_all_types();
	}
} vnx_static_init_;

const vnx::TypeCode* const vnx_native_type_code_CacheBase = vnx::get_type_code(vnx::Hash64(0xce1232a3eb35ccf9ull));
const vnx::TypeCode* const vnx_native_type_code_CloseEntry = vnx::get_type_code(vnx::Hash64(0xc06cd9d036102eefull));
const vnx::TypeCode* const vnx_native_type_code_ClusterBase = vnx::get_type_code(vnx::Hash64(0xd15d8542fc63cb26ull));
const vnx::TypeCode* const vnx_native_type_code_Collection = vnx::get_type_code(vnx::Hash64(0xf1b6072fecc4ebf8ull));
const vnx::TypeCode* const vnx_native_type_code_Entry = vnx::get_type_code(vnx::Hash64(0x2abaf70b7d1102a8ull));
const vnx::TypeCode* const vnx_native_type_code_IndexEntry = vnx::get_type_code(vnx::Hash64(0xbcae33addff34e23ull));
const vnx::TypeCode* const vnx_native_type_code_ServerBase = vnx::get_type_code(vnx::Hash64(0xbb28aa6f1d808048ull));
const vnx::TypeCode* const vnx_native_type_code_ServerInfo = vnx::get_type_code(vnx::Hash64(0x84f5671f9ec97c93ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_cancel_sync_job = vnx::get_type_code(vnx::Hash64(0x79f19daa5278fbc0ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_cancel_sync_job_return = vnx::get_type_code(vnx::Hash64(0x8e03e14a8636511dull));
const vnx::TypeCode* const vnx_native_type_code_Storage_delete_value = vnx::get_type_code(vnx::Hash64(0x28e40902541d1c63ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_delete_value_return = vnx::get_type_code(vnx::Hash64(0xd20199c7d67361d7ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_key = vnx::get_type_code(vnx::Hash64(0xc7c81afb9921d76ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_key_return = vnx::get_type_code(vnx::Hash64(0x5e35e7e9fb0c828ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_keys = vnx::get_type_code(vnx::Hash64(0xd75f52c837f6ac18ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_keys_return = vnx::get_type_code(vnx::Hash64(0x5a68455b9ce7b40full));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_value = vnx::get_type_code(vnx::Hash64(0x8f47587c24580111ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_value_return = vnx::get_type_code(vnx::Hash64(0x4a92482e1381ab01ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_value_locked = vnx::get_type_code(vnx::Hash64(0xfd0f1035b160c34full));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_value_locked_return = vnx::get_type_code(vnx::Hash64(0x9cc2e6345ebe66aeull));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_values = vnx::get_type_code(vnx::Hash64(0x7427b9c6f9a68c30ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_get_values_return = vnx::get_type_code(vnx::Hash64(0xe59fbd8a92b4aaf7ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_store_value = vnx::get_type_code(vnx::Hash64(0xa1b7f9743ce3a0f1ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_store_value_return = vnx::get_type_code(vnx::Hash64(0x5f02038d66b3d8b5ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_store_value_delay = vnx::get_type_code(vnx::Hash64(0x8e78c89a3ce01406ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_store_value_delay_return = vnx::get_type_code(vnx::Hash64(0x5120f9f0f9c280bbull));
const vnx::TypeCode* const vnx_native_type_code_Storage_store_values = vnx::get_type_code(vnx::Hash64(0x22e477486f9c73e0ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_store_values_return = vnx::get_type_code(vnx::Hash64(0xd19a5a98ea9c632eull));
const vnx::TypeCode* const vnx_native_type_code_Storage_store_values_delay = vnx::get_type_code(vnx::Hash64(0xd00ca16a73abf985ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_store_values_delay_return = vnx::get_type_code(vnx::Hash64(0xc60b951a5784d824ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_all = vnx::get_type_code(vnx::Hash64(0x973bf802c6c0aaabull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_all_return = vnx::get_type_code(vnx::Hash64(0x68518904fdf771c7ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_all_keys = vnx::get_type_code(vnx::Hash64(0xba52cec87e1556e5ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_all_keys_return = vnx::get_type_code(vnx::Hash64(0x69af743aa67ea377ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_all_keys_private = vnx::get_type_code(vnx::Hash64(0xe97e1ae088642d08ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_all_keys_private_return = vnx::get_type_code(vnx::Hash64(0xa1e52eb7076861a9ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_all_private = vnx::get_type_code(vnx::Hash64(0xa6bf50c092ed0143ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_all_private_return = vnx::get_type_code(vnx::Hash64(0x8be85d0f4c49eea1ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_from = vnx::get_type_code(vnx::Hash64(0xacb686150d0602a6ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_from_return = vnx::get_type_code(vnx::Hash64(0xc2e2a98c4fda747ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_range = vnx::get_type_code(vnx::Hash64(0x57e04cb98c5e5698ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_sync_range_return = vnx::get_type_code(vnx::Hash64(0xa373940430d0fa20ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_unlock = vnx::get_type_code(vnx::Hash64(0x25041c8bd6ea1977ull));
const vnx::TypeCode* const vnx_native_type_code_Storage_unlock_return = vnx::get_type_code(vnx::Hash64(0x64b5d034680b0fb1ull));
const vnx::TypeCode* const vnx_native_type_code_SyncInfo = vnx::get_type_code(vnx::Hash64(0x4f9820ae95813502ull));
const vnx::TypeCode* const vnx_native_type_code_SyncModuleBase = vnx::get_type_code(vnx::Hash64(0x508da303057fe58cull));
const vnx::TypeCode* const vnx_native_type_code_SyncUpdate = vnx::get_type_code(vnx::Hash64(0xcf6f029ce644d6e3ull));
const vnx::TypeCode* const vnx_native_type_code_TypeEntry = vnx::get_type_code(vnx::Hash64(0x5d3011caa7dadfd3ull));
const vnx::TypeCode* const vnx_native_type_code_shard_t = vnx::get_type_code(vnx::Hash64(0x2d052c83abce314dull));

} // namespace vnx
} // namespace keyvalue
